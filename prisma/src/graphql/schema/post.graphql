type Post {
  id: ID!
  title: String!
  body: String!
  published: Boolean!
  author: User
  comments: [Comment]!
}

input CreatePostInput {
  title: String!
  body: String!
}

input UpdatePostInput {
  title: String
  body: String
  published: Boolean
  archive: Boolean
}

input PostWhereInput {
  title: StringFilter
  body: StringFilter
  published: Boolean
  archive: Boolean
}

extend type Query {
  posts(where: PostWhereInput): [Post]!
  post(id: ID!): Post!
}

extend type Mutation {
  createPost(data: CreatePostInput!): Post!
  deletePost(id: ID!): Boolean!
  updatePost(id: ID!, data: UpdatePostInput!): Post!
  publishPost(id: ID!): Post!
}

type PostEvent {
  type: EventType!
  data: Post
}

extend type Subscription {
  post: PostEvent!
}
