services:
  postgres17-local:
    image: postgres:17.6
    container_name: postgres17-local
    restart: always
    env_file:
      - ./.env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  dd-agent:
    image: gcr.io/datadoghq/agent:7
    container_name: dd-agent
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      # ✅ Required
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=datadoghq.com
      - DD_ENV=dev

      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true

      # ✅ Enable APM
      - DD_APM_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
      
      # ✅ Disable sampling limits to accept all traces (development)
      - DD_APM_MAX_TPS=200
      - DD_APM_ERROR_TPS=200
      
      # ✅ Disable APM filters so every trace is accepted
      - DD_APM_FILTER_TAGS_REQUIRE=
      - DD_APM_FILTER_TAGS_REJECT=
      
      # ✅ Debug mode
      - DD_LOG_LEVEL=debug

      # ✅ Enable DogStatsD
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true

      # ✅ Comment out socket configuration and rely on HTTP (more stable)
      # - DD_APM_RECEIVER_SOCKET=/var/run/datadog/apm.socket
      # - DD_DOGSTATSD_SOCKET=/var/run/datadog/dsd.socket

    volumes:
      - /var/run/datadog:/var/run/datadog
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro

    ports:
      # Default APM trace port
      - "8126:8126"
      # Default DogStatsD port
      - "8125:8125/udp"

  # app:
  #   build: .
  #   container_name: myapp
  #   environment:
  #     # Specify agent hostname for Docker internal networking
  #     - DD_AGENT_HOST=dd-agent
  #     - DD_TRACE_AGENT_PORT=8126
  #     - DD_ENV=dev
  #     - DD_SERVICE=myapp
  #   depends_on:
  #     - dd-agent
  #   ports:
  #     - "3000:3000"

volumes:
  postgres_data:
